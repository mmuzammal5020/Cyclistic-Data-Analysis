trip_2019 <- read.csv("Divvy_Trip_2019_Q1.csv", header = TRUE, sep = ",")
getwd()
trip_2019 <- read.csv("Divvy_Trip_2019_Q1.csv", header = TRUE, sep = ",")
library(readr)
Trip_2020 <- read_csv("Trip_2020.csv")
View(Trip_2020)
trip_2019 <- read_csv("Divvy_Trip_2019_Q1.csv", header = TRUE, sep = ",")
trip_2019 <- read_csv("Divvy_Trip_2019_Q1.csv")
trip_2019 <- read_csv("Trip_2019.csv")
View(trip_2019)
trip_2020 <- read_csv("Trip_2020.csv")
View(trip_2020)
View(Trip_2020)
str(trip_2019)
str(trip_2020)
library(dplyr)
library(plyr)
install.packages("plyr")
library(plyr)
combined_data <- union_all(trip_2019,trip_2020)
rlang::last_trace()
combined_data <- union_all(trip_2019,trip_2020)
start_time = trip_2019$start_time
print(start_time)
end_time = trip_2019$end_time
print(end_time)
total_trip_time = end_time - start_time
total_trip_time = difftime(end_time, start_time, units = "mins")
trip_2019_new <- trip_2019[ , "start_time" := as.Date(start_time)]
total_trip_time = difftime(end_time, start_time, units = "mins")
start_time <- ymd_hms(start_time)
library(lubridate)
start_time <- ymd_hms(start_time)
end_time <- ymd_hms(end_time)
total_trip_time <- as.numeric(difftime(end_time, start_time, units = "mins"))
print(total_trip_time)
end_time = ymd_hms(trip_2019$end_time)
print(end_time)
quit()
install.packages('tidyverse')
install.packages('janitor')
install.packages('lubridate')
library(tidyverse)
library(janitor)
library(lubridate)
jan_2021 <- read_csv("Cyclist Data/202101-divvy-tripdata.csv")
feb_2021 <- read_csv("Cyclist Data/202102-divvy-tripdata.csv")
mar_2021 <- read_csv("Cyclist Data/202103-divvy-tripdata.csv")
apr_2021 <- read_csv("Cyclist Data/202104-divvy-tripdata.csv")
may_2021 <- read_csv("Cyclist Data/202105-divvy-tripdata.csv")
jun_2021 <- read_csv("Cyclist Data/202106-divvy-tripdata.csv")
jul_2021 <- read_csv("Cyclist Data/202107-divvy-tripdata.csv")
aug_2021 <- read_csv("Cyclist Data/202108-divvy-tripdata.csv")
sep_2021 <- read_csv("Cyclist Data/202109-divvy-tripdata.csv")
oct_2021 <- read_csv("Cyclist Data/202110-divvy-tripdata.csv")
nov_2021 <- read_csv("Cyclist Data/202111-divvy-tripdata.csv")
dec_2021 <- read_csv("Cyclist Data/202112-divvy-tripdata.csv")
str(jan_2021)
str(feb_2021)
str(jul_2021)
combined_df <- bind_rows(jan_2021, feb_2021, mar_2021, apr_2021, may_2021,
jun_2021, jul_2021, aug_2021, sep_2021, oct_2021
nov_2021, dec_2021)
combined_df <- bind_rows(jan_2021, feb_2021, mar_2021, apr_2021, may_2021, jun_2021, jul_2021, aug_2021, sep_2021, oct_2021, nov_2021, dec_2021)
rlang::last_trace()
combined_df <- bind_rows(jan_2021, feb_2021, mar_2021, apr_2021, may_2021, jun_2021, jul_2021, aug_2021, sep_2021, oct_2021, nov_2021, dec_2021)
rlang::last_trace()
temp <- list.files("G:\Database\R Codes\Cyclistic\Cyclist Data", full.names = TRUE, pattern = "\\.csv$")
temp <- list.files("G:/Database/R Codes/Cyclistic/Cyclist Data", full.names = TRUE, pattern = "\\.csv$")
combined_trip_data <- rbindlist(lapply(temp, fread), fill = TRUE)
library(data.table)
install.packages("data.table")
library(data.table)
temp <- list.files("G:/Database/R Codes/Cyclistic/Cyclist Data", full.names = TRUE, pattern = "\\.csv$")
combined_trip_data <- rbindlist(lapply(temp, fread), fill = TRUE)
for (file in temp) {
dt <- fread(file, nrows = 5)  # Read only the first few rows to check the structure
print(file)
print(str(dt))
}
read_and_normalize <- function(file) {
dt <- fread(file)
dt[, 3 := as.character(get(names(dt)[3]))]  # Ensure column 3 is character
return(dt)
}
combined_trip_data <- rbindlist(lapply(temp, read_and_normalize), fill = TRUE)
read_and_normalize <- function(file, column_names, expected_types) {
dt <- fread(file)
sample_file <- fread(temp[1])
column_names <- names(sample_file)
expected_types <- sapply(sample_file, class)
# Print column names and expected types (for debugging)
print(column_names)
print(expected_types)
# Function to read a file and normalize column types
read_and_normalize <- function(file, column_names, expected_types) {
dt <- fread(file)
# Ensure all expected columns are present
for (col in column_names) {
if (!col %in% names(dt)) {
dt[, (col) := NA]
}
}
# Reorder columns to match the expected order
setcolorder(dt, column_names)
# Convert columns to expected types
for (col in column_names) {
col_class <- expected_types[col]
dt[, (col) := lapply(.SD, as, col_class), .SDcols = col]
}
return(dt)
}
# Apply the function to each file and combine
combined_trip_data <- rbindlist(lapply(temp, read_and_normalize, column_names = column_names, expected_types = expected_types), fill = TRUE)
# Check the result
print(combined_trip_data)
quit()
exit()
sample_file <- fread(temp[1])
library(data.table)
temp <- list.files("G:/Database/R Codes/Cyclistic/Cyclist Data", full.names = TRUE, pattern = "\\.csv$")
sample_file <- fread(temp[1])
column_names <- names(sample_file)
expected_types <- sapply(sample_file, class)
print(column_names)
print(expected_types)
read_and_normalize <- function(file, column_names, expected_types) {
dt <- fread(file)
View(sample_file)
View(sample_file)
for (col in column_names) {
if (!col %in% names(dt)) {
dt[, (col) := NA]
}
}
for (col in column_names) {
if (!col %in% names(dt)) {
dt[, (col) := NA]
}
}
for (col in column_names) {
if (!col %in% names(dt)) {
dt[, (col) := NA]
}
}
quit()
